---
import type { HexColor } from "../types/CssColor";
import Button from "./Button.astro";

interface Props {
  darkTextColor: HexColor;
}

const { darkTextColor } = Astro.props;
---

<div id="file-upload">
  <Button
    class="select-screenshot"
    lightShadowColor="#e4f6fe"
    lightGradientColor="#1E88E5"
    lightTextColor={darkTextColor}
    lightColorDifference={0.15}
    darkShadowColor="#07285a"
    darkGradientColor="#1E88E5"
    darkTextColor={darkTextColor}
    darkColorDifference={0.9}
    padding
    small
  >
    Select Screenshot
  </Button>

  <h2>Try it with a example image</h2>
  <div class="demo-images">
    <button>
      <img src="/note.jpeg" alt="note" />
    </button>
  </div>

  <input type="file" accept="image/*" />
</div>

<script>
  const buttons = document.querySelectorAll(
    ".select-screenshot" // there's another one in Controlls
  ) as NodeListOf<HTMLButtonElement>;
  const input = document.querySelector(
    "#file-upload > input"
  ) as HTMLInputElement;

  for (const button of buttons) {
    button.addEventListener("click", () => {
      input.click();
    });
  }

  const fileUploadLabel = document.querySelector("#file-upload")!;

  fileUploadLabel.addEventListener("dragenter", (event) => {
    fileUploadLabel.classList.add("dragging");
  });
  fileUploadLabel.addEventListener("dragleave", (event) => {
    fileUploadLabel.classList.remove("dragging");
  });
</script>

<style lang="scss">
  #file-upload {
    position: relative;

    box-sizing: border-box;

    width: 100%;
    height: 100svh;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    &::before {
      content: "";

      position: absolute;
      inset: 0;

      border: 0.5em dashed #1e88e5;
      border-radius: 2em;

      transition: opacity 125ms ease-in-out;
      opacity: 0;
    }

    &.dragging {
      &::before {
        opacity: 1;
      }

      & > button {
        pointer-events: none;
      }
    }

    & > input {
      position: absolute;
      inset: 0;

      opacity: 0;
    }

    & > h2 {
      margin-top: 1.5em;
      font-weight: normal;
    }

    & > .demo-images {
      display: flex;
      flex-wrap: wrap;
      gap: 1em;
      z-index: 1;

      & > button {
        display: block;

        width: 15em;
        height: 15em;

        border: 0.5em solid #c0c0c0;
        border-radius: 1em;

        padding: 0;
        overflow: hidden;

        cursor: pointer;

        transition: border-color 250ms linear;

        @media (hover: hover) {
          &:hover {
            border-color: #607587;
          }
        }

        &:active {
          border-color: #1e88e5;
        }

        & > img {
          -webkit-touch-callout: none;
          -webkit-user-select: none;

          display: block;

          width: 100%;
          height: 100%;
          object-fit: cover;
          object-position: top;
        }
      }
    }
  }
</style>
