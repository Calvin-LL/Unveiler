---
import type { HexColor } from "../types/CssColor";
import Button from "./Button.astro";

interface Props {
  darkTextColor: HexColor;
}

const { darkTextColor } = Astro.props;
---

<label id="file-upload">
  <Button
    class="select-screenshot"
    lightShadowColor="#e4f6fe"
    lightGradientColor="#1E88E5"
    lightTextColor={darkTextColor}
    lightColorDifference={0.15}
    darkShadowColor="#07285a"
    darkGradientColor="#1E88E5"
    darkTextColor={darkTextColor}
    darkColorDifference={0.9}
    padding
    small
  >
    Select Screenshot
  </Button>
  <input type="file" accept="image/*" />
</label>

<script>
  const buttons = document.querySelectorAll(
    ".select-screenshot" // there's another one in Controlls
  ) as NodeListOf<HTMLButtonElement>;
  const input = document.querySelector(
    "#file-upload > input"
  ) as HTMLInputElement;

  for (const button of buttons) {
    button.addEventListener("click", () => {
      input.click();
    });
  }

  const fileUploadLabel = document.querySelector("#file-upload")!;

  fileUploadLabel.addEventListener("dragenter", (event) => {
    fileUploadLabel.classList.add("dragging");
  });
  fileUploadLabel.addEventListener("dragleave", (event) => {
    fileUploadLabel.classList.remove("dragging");
  });
</script>

<style lang="scss">
  #file-upload {
    position: relative;

    box-sizing: border-box;

    width: 100%;
    height: 100svh;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    &::before {
      content: "";

      position: absolute;
      inset: 0;

      border: 0.5em dashed #1e88e5;
      border-radius: 2em;

      transition: opacity 125ms ease-in-out;
      opacity: 0;
    }

    &.dragging {
      &::before {
        opacity: 1;
      }

      & > button {
        pointer-events: none;
      }
    }

    & > input {
      position: absolute;
      inset: 0;

      opacity: 0;
    }
  }
</style>
